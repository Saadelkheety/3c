x-app: &default-app
  build:
    context: "."
    args:
      - "UID=${UID:-1000}"
      - "GID=${GID:-1000}"
      - "DEBUG=${DEBUG:-false}"
  depends_on:
    - "postgres"
    - "redis"
  env_file:
    - ".env"
  restart: "unless-stopped"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "./static_collected:/app/static_collected"

services:
  postgres:
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      # POSTGRES_DB: "${POSTGRES_DB}"
    image: "postgres:14.5-bullseye"
    profiles: ["postgres"]
    restart: "unless-stopped"
    container_name: "3c-postgres"
    stop_grace_period: "3s"
    volumes:
      - "postgres:/var/lib/postgresql/data"

  redis:
    image: "redis:7.0.5-bullseye"
    profiles: ["redis"]
    restart: "unless-stopped"
    stop_grace_period: "3s"
    container_name: "3c-redis"
    volumes:
      - "redis:/data"

  web:
    <<: *default-app
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:${PORT:-8000}"
    profiles: ["web"]
    container_name: "3c-web"
    volumes:
      - "./:/app/"

  worker:
    <<: *default-app
    command: celery -A config worker -l "${CELERY_LOG_LEVEL:-info}"
    entrypoint: []
    profiles: ["worker"]
    container_name: "3c-worker"


volumes:
  postgres: {}
  redis: {}